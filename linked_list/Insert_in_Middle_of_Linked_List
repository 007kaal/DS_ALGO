Problem :
---------
Given a linked list of size N and a key. The task is to insert the key in the middle of the linked list.

Input:
First line of input contains number of testcases T. For each testcase, first line contains length of linked list N and next line contains N elements to be inserted into the linked list and the last line contains the element to be inserted to the middle.

Output:
For each testcase, there will be a single line of output containing the element of modified linked list.

User Task:
The task is to complete the function insertInMiddle() which takes head reference and element to be inserted as the arguments. The printing is done automatically by the driver code.

Constraints:
1 <= T <= 100
1 <= N <= 103

Example:
Input:
2
3
1 2 4
3
4
10 20 40 50
30
Output:
1 2 3 4
10 20 30 40 50

Explanation:
Testcase 1: The new element is inserted after the current middle element in the linked list.
Testcase 2: The new element is inserted after the current middle element in the linked list and Hence, the output is 10 20 30 40 50.
 
Solution:
--------
/*
struct Node {
  int data;
  struct Node *next;
  Node(int x) {
    data = x;
    next = NULL;
  }
};
*/

// function should insert node at the middle
// of the linked list
Node* insertInMiddle(Node* head, int x)
{
    Node *slow= head;
    Node *fast= head;
    while(fast && fast->next && fast->next->next){
        fast = fast->next->next;
        slow = slow->next;
    }
    Node *newnode = new Node(x);
    newnode->next = slow->next;
    slow->next = newnode;
    return head;
}
